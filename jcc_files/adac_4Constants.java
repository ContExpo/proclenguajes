/* Generated By:JavaCC: Do not edit this line. adac_4Constants.java */
package traductor;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface adac_4Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LETTER = 1;
  /** RegularExpression Id. */
  int DIGIT = 2;
  /** RegularExpression Id. */
  int NUM = 3;
  /** RegularExpression Id. */
  int WORD = 4;
  /** RegularExpression Id. */
  int tCHAR = 7;
  /** RegularExpression Id. */
  int tSTRING = 8;
  /** RegularExpression Id. */
  int tNUM = 9;
  /** RegularExpression Id. */
  int tPROC = 10;
  /** RegularExpression Id. */
  int tIS = 11;
  /** RegularExpression Id. */
  int tBEGIN = 12;
  /** RegularExpression Id. */
  int tEND = 13;
  /** RegularExpression Id. */
  int tRET = 14;
  /** RegularExpression Id. */
  int tBOOL = 15;
  /** RegularExpression Id. */
  int tCHDECL = 16;
  /** RegularExpression Id. */
  int tINT = 17;
  /** RegularExpression Id. */
  int tNOT = 18;
  /** RegularExpression Id. */
  int tOR = 19;
  /** RegularExpression Id. */
  int tAND = 20;
  /** RegularExpression Id. */
  int tIF = 21;
  /** RegularExpression Id. */
  int tTHEN = 22;
  /** RegularExpression Id. */
  int tELSE = 23;
  /** RegularExpression Id. */
  int tWHIL = 24;
  /** RegularExpression Id. */
  int tDO = 25;
  /** RegularExpression Id. */
  int tCOMMA = 26;
  /** RegularExpression Id. */
  int tSCOL = 27;
  /** RegularExpression Id. */
  int tPTOP = 28;
  /** RegularExpression Id. */
  int tPTCL = 29;
  /** RegularExpression Id. */
  int tSQOP = 30;
  /** RegularExpression Id. */
  int tSQCL = 31;
  /** RegularExpression Id. */
  int tSQUOT = 32;
  /** RegularExpression Id. */
  int tDQUOT = 33;
  /** RegularExpression Id. */
  int tASIG = 34;
  /** RegularExpression Id. */
  int tADD = 35;
  /** RegularExpression Id. */
  int tSUB = 36;
  /** RegularExpression Id. */
  int tMUL = 37;
  /** RegularExpression Id. */
  int tDIV = 38;
  /** RegularExpression Id. */
  int tMOD = 39;
  /** RegularExpression Id. */
  int tGT = 40;
  /** RegularExpression Id. */
  int tLT = 41;
  /** RegularExpression Id. */
  int tEQ = 42;
  /** RegularExpression Id. */
  int tGEQ = 43;
  /** RegularExpression Id. */
  int tLEQ = 44;
  /** RegularExpression Id. */
  int tDIFF = 45;
  /** RegularExpression Id. */
  int tTRUE = 46;
  /** RegularExpression Id. */
  int tFALSE = 47;
  /** RegularExpression Id. */
  int tATOI = 48;
  /** RegularExpression Id. */
  int tITOA = 49;
  /** RegularExpression Id. */
  int tGET = 50;
  /** RegularExpression Id. */
  int tSKIPL = 51;
  /** RegularExpression Id. */
  int tPUT = 52;
  /** RegularExpression Id. */
  int tPUTL = 53;
  /** RegularExpression Id. */
  int tFUNC = 54;
  /** RegularExpression Id. */
  int tVAL = 55;
  /** RegularExpression Id. */
  int tREF = 56;
  /** RegularExpression Id. */
  int tID = 57;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<LETTER>",
    "<DIGIT>",
    "<NUM>",
    "<WORD>",
    "<token of kind 5>",
    "<token of kind 6>",
    "<tCHAR>",
    "<tSTRING>",
    "<tNUM>",
    "\"procedure\"",
    "\"is\"",
    "\"begin\"",
    "\"end\"",
    "\"return\"",
    "\"boolean\"",
    "\"character\"",
    "\"integer\"",
    "\"not\"",
    "\"or\"",
    "\"and\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"while\"",
    "\"do\"",
    "\",\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"\\\'\"",
    "\"\\\"\"",
    "\":=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"div\"",
    "\"mod\"",
    "\">\"",
    "\"<\"",
    "\"=\"",
    "\">=\"",
    "\"<=\"",
    "\"<>\"",
    "\"true\"",
    "\"false\"",
    "\"char2int\"",
    "\"int2char\"",
    "\"get\"",
    "\"skip_line\"",
    "\"put\"",
    "\"put_line\"",
    "\"function\"",
    "\"val\"",
    "\"ref\"",
    "<tID>",
    "<token of kind 58>",
  };

}
